//https://www.educative.io/m/level-order-traversal-binary-tree

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    struct node* left, *right;
    node(int val)
    {
        data = val;
        left = right = nullptr;
    }
};

void levelOrderTraversal(struct node* root)
{
    queue<struct node*> queueTree[2];
    queue<struct node*> current_queue, next_queue;
    
    int cur_level = 0;
    
    current_queue = &queueTree[0];
    next_queue = &queueTree[1];
    current_queue.push(root);
    
    while(current_queue != empty())
    {
        struct node* cur_node = current_queue.top();
        current_queue.pop();
        
        cout << cur_node->data << "  " << endl;
        
        if(cur_node->left != nullptr)
            next_queue.push(cur_node->left);
        if(cur_node->right != nullptr)
            next_queue.push(cur_node->right);

        if(current_queue.empty())
        {
            ++cur_level;
            current_queue = &queueTree[cur_level % 2];
            next_queue = &queueTree[(cur_level + 1) % 2];
        }
    }
    
}

int main()
{
    struct node* root = new struct node(10);
    root->left = new struct node(30);
    root->right = new struct node(15);
    root->left->left = new struct node(20);
    root->left->right = new struct node(5);
    
    levelOrderTraversal(root);
}
