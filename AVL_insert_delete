
//https://www.geeksforgeeks.org/binary-search-tree-set-2-delete/
#include <iostream>
using namespace std;

struct node
{
    int val;
    node* left;
    node* right;
    int height;
    node(int cur)
    {
        val = cur;
        left = nullptr;
        right = nullptr;
        height = 1;
    }
};

int height(struct node* root)
{
    if(root == nullptr)
        return 0;
    else
        return root->height;
}

int max(int a, int b)
{
    return (a > b) ? a : b;
}

int getBalance(struct node* root)
{
    if(root == nullptr)
        return 0;
    else
        return (height(root->left) - height(root->right));
}
struct node* insert(struct node* root, int key)
{
    if(root == nullptr)
        return node(key);
    
    if(key < root->key )
        root->left = insert(root->left, key);
        
    else
    {
        if(key > root->key)
            root->right = insert(root->right, key);
        else
            return root;
    }
    
    root->height = 1 + max(height(root->left), height(root->right));
    
    int balance = getBalance(root);
    
    
    }
}
