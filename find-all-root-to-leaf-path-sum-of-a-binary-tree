#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    struct node* left, *right;
    node(int val)
    {
        data = val;
        left = right = nullptr;
    }
};

void sumAllPaths(struct node* cur_node, int sum, vector<int>& pathSum)
{
    if(cur_node == nullptr)
        return;
    
    sum = sum + cur_node->data;
    
    if(cur_node->left == nullptr && cur_node->right == nullptr)
    {
        pathSum.push_back(sum);
        return;
    }
    
    sumAllPaths(cur_node->left, sum, pathSum);
    sumAllPaths(cur_node->right, sum, pathSum);
}

int main() {
    struct node* root = new struct node(30);
    root->left = new struct node(10);
    root->right = new struct node(50);
    root->left->left = new struct node(3);
    root->left->right = new struct node(16);
    root->right->left = new struct node(40);
    root->right->right = new struct node(60);
    
    int sum = 0;
    vector<int> pathSum;
    sumAllPaths(root, sum, pathSum);
    
    for(int sum : pathSum)
        std::cout <<  sum << "   ";
    cout << endl;
	return 0;
}
