#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct node
{
    int data;
    struct node* left;
    struct node* right;
    
    node(int val)
    {
       data = val;
       left = nullptr;
       right = nullptr;
    }
};

int height(struct node* cur)
{
    if(cur == nullptr)
        return 0;
    
    return (1 + max(height(cur->left), height(cur->right)));
}

int findLenTreeDiameter(struct node* root)
{
    if(root == nullptr)
        return 0;
        
    int lheight = height(root->left);
    int rheight = height(root->right);
    
    int lDiameter = findLenTreeDiameter(root->left);
    int rDiameter = findLenTreeDiameter(root->right);

    return max((lheight+rheight+1), max(lDiameter, rDiameter));
}


int main() {
    struct node* root = new node(1);
    root->left = new node(2);
    root->right = new node(3);
    root->left->left = new node(4);
    root->left->right = new node(5);
    root->left->left->left = new node(6);
    root->left->left->right = new node(7);
    root->left->right->right = new node(8);
    root->left->left->right->left = new node(9);
    root->left->right->right->left = new node(10);
    root->left->right->right->right = new node(11);
    root->left->left->right->left->right = new node(12);
    root->left->right->right->right->left = new node(13);
    root->left->left->right->left->right->right = new node(14);
    cout << "diameter of current tree : " << findLenTreeDiameter(root);
	return 0;
}
